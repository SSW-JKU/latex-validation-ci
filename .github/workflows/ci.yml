name: Build CI

on: push

jobs:
  lint:
    name: "Lint+typecheck"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          cache: "pip"
          python-version: ${{ matrix.python-version }}
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools
          pip install -r requirements.txt
      - name: Lint
        run: make lint
      - name: Type check
        run: make typecheck

  # TODO: disable/enable depending on whether we have unit tests
  test:
    name: "Test"
    runs-on: ubuntu-latest
    needs: ["lint"]
    strategy:
      matrix:
        python-version: ["3.13"]
        # texlive-version: ["2024", "2025"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          cache: "pip" # caching pip dependencies
          python-version: ${{ matrix.python-version }}
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools
          pip install -r requirements.txt
      # - name: Setup TeX Live
      #   uses: teatimeguest/setup-texlive-action@v3
      #   with:
      #     version: ${{ matrix.texlive-version }}
      #     packages: >-
      #       scheme-basic
      #       latexmk
      - name: Run unittests
        run: make test

  deploy:
    name: "Create release"
    needs: ["test"]
    if: "${{ startsWith(github.ref, 'refs/tags/') }}"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # read changelog for release notes
      - name: Prepare release notes
        id: changelog
        run: |
          TAG_NAME="${GITHUB_REF##*/}"
          echo "TAG=$TAG_NAME" >> $GITHUB_ENV
          NOTES=$(awk "/^## \[${TAG_NAME:1}\]/{flag=1;next}/^## /{flag=0}flag" CHANGELOG.md)
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "$NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          cat $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: Release ${{ env.TAG }}
          body: ${{ env.RELEASE_NOTES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
